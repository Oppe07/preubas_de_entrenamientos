# enviroment = pruebas_de_entrenamiento
#se agrega requirements.txt

from ultralytics import YOLO
import torch
import os

# Cargar el modelo YOLOv8 en modo de segmentación
model = YOLO('yolov8n-seg.pt')  # Puedes cambiar 'n' por otros tamaños: s, m, l, x

# Mostrar el dispositivo que está utilizando
print("Dispositivo utilizado para el entrenamiento:", model.device)

# Verificar si CUDA está disponible
print("CUDA disponible:", torch.cuda.is_available())

# Obtener la ruta absoluta del archivo YAML
script_dir = os.path.dirname(os.path.abspath(__file__))
yaml_path = os.path.join(script_dir, 'YOLODataset/linea.yaml')

# Entrenar el modelo
if __name__ == "__main__":
    # Asegura compatibilidad con PyTorch en Windows
    torch.multiprocessing.set_start_method('spawn', force=True)

    # Configuración de entrenamiento
    model.train(
        data=yaml_path,  # Ruta del archivo YAML
        epochs=100,
        imgsz=640,
        batch=8,
        name='segmentation_model',
        device='cuda' if torch.cuda.is_available() else 'cpu',  # Usar GPU si está disponible
        project=r'../yolo8/runs',
        workers=0  # Configura 0 workers para evitar problemas de subprocesos en Windows
    )
